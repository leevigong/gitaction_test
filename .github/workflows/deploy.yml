name: ci & deploy

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          set -x  # Enable debugging
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" | sed 's/\r$//' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      - name: Set up SSH known hosts
        run: |
          set -x  # Enable debugging
          mkdir -p ~/.ssh
          echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts

      - name: Get GitHub Actions IP
        id: get-ip
        uses: haythem/public-ip@v1.2

      - name: Print GitHub Actions IP
        run:
          echo "GitHub Actions IP: ${{ steps.get-ip.outputs.ip }}"

      #      - name: Test SSH connection
#        run: ssh -vvv -o StrictHostKeyChecking=no daeun@172.27.8.165 'echo "SSH connection successful"'

      #      - name: Test SSH connection
#        run: ssh -v -o StrictHostKeyChecking=no daeun@172.27.8.165 'echo "SSH connection successful"'
#
#      - name: Attempt SSH key scan
#        run: |
#          set -x  # Enable debugging
#          ssh-keyscan -v -H 172.27.8.165 || echo "ssh-keyscan failed"
      #      - name: Set up SSH key
      #        env:
      #          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      #        run: |
      #          set -x  # Enable debugging
      #          mkdir -p ~/.ssh
      #          echo "$SSH_PRIVATE_KEY" | sed 's/\r$//' > ~/.ssh/id_rsa
      #          chmod 600 ~/.ssh/id_rsa
      #
      #      - name: Scan SSH host key
      #        run: ssh-keyscan -v -H 172.27.8.165
      #
      #      - name: Test SSH connection
      #        run: ssh -v -o StrictHostKeyChecking=no daeun@172.27.8.165 'echo "SSH connection successful"'

      #    ssh-keyscan -H 172.27.8.165 >> ~/.ssh/known_hosts
      #
      #      - name: Copy files to remote server
      #        run: |
      #          scp -r . daeun@172.27.8.165:/home/daeun/deploy
      #
      #      - name: Deploy on remote server
      #        run: |
      #          ssh -v daeun@172.27.8.165 'cd /home/daeun/deploy && docker-compose up -d --build'